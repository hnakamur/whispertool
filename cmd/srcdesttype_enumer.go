// Code generated by "enumer -type SrcDestType -transform=snake"; DO NOT EDIT.

//
package cmd

import (
	"fmt"
)

const _SrcDestTypeName = "sourcedestination"

var _SrcDestTypeIndex = [...]uint8{0, 6, 17}

func (i SrcDestType) String() string {
	i -= 1
	if i < 0 || i >= SrcDestType(len(_SrcDestTypeIndex)-1) {
		return fmt.Sprintf("SrcDestType(%d)", i+1)
	}
	return _SrcDestTypeName[_SrcDestTypeIndex[i]:_SrcDestTypeIndex[i+1]]
}

var _SrcDestTypeValues = []SrcDestType{1, 2}

var _SrcDestTypeNameToValueMap = map[string]SrcDestType{
	_SrcDestTypeName[0:6]:  1,
	_SrcDestTypeName[6:17]: 2,
}

// SrcDestTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SrcDestTypeString(s string) (SrcDestType, error) {
	if val, ok := _SrcDestTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SrcDestType values", s)
}

// SrcDestTypeValues returns all values of the enum
func SrcDestTypeValues() []SrcDestType {
	return _SrcDestTypeValues
}

// IsASrcDestType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SrcDestType) IsASrcDestType() bool {
	for _, v := range _SrcDestTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
